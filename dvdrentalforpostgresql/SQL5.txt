-- creating table

-- CREATE TABLE account(
-- 	user_id SERIAL PRIMARY KEY,
-- 	username VARCHAR(50) UNIQUE NOT NULL,
-- 	password VARCHAR(50) NOT NULL,
-- 	email VARCHAR(250) UNIQUE NOT NULL,
-- 	create_on TIMESTAMP NOT NULL,
-- 	last_login TIMESTAMP
-- )

-- CREATE TABLE job(
-- 	job_id SERIAL PRIMARY KEY,
-- 	job_name VARCHAR(200) UNIQUE NOT NULL
-- )

-- CREATE TABLE account_job(
-- 	user_id INTEGER REFERENCES account(user_id),
-- 	job_id INTEGER REFERENCES job(job_id),
-- 	hire_date TIMESTAMP
-- )

-- INSERT
-- SELECT * FROM account;
-- INSERT INTO account (username, password, email, create_on)
-- VALUES 
-- ('Jimmy', 'password', 'jimmy@email.com', CURRENT_TIMESTAMP);

-- SELECT * FROM job;
-- INSERT INTO job(job_name)
-- VALUES
-- ('Engineer')

-- INSERT INTO job(job_name)
-- VALUES
-- ('Painter')

-- SELECT * FROM account;
-- INSERT INTO account_job(user_id, job_id, hire_date)
-- VALUES
-- (1,1,CURRENT_TIMESTAMP)

-- UPDATE
-- UPDATE account
-- SET last_login = CURRENT_TIMESTAMP;

-- UPDATE account
-- SET last_login = create_on;

-- UPDATE account_job
-- SET hire_date = account.create_on
-- FROM account
-- WHERE account_job.user_id = account.user_id
-- RETURNING *;

-- DELETE
-- DELETE FROM TableA
-- USING TableB
-- WHERE TableA.id = TableB.id

-- INSERT INTO job(job_name)
-- VALUES
-- ('Plumber')

-- DELETE FROM job
-- WHERE job_name = 'Plumber'
-- RETURNING job_id, job_name;

-- ALTER
-- CREATE TABLE information(
-- 	info_id SERIAL PRIMARY KEY,
-- 	title VARCHAR(50) NOT NULL,
-- 	person VARCHAR(50) NOT NULL UNIQUE
-- )

-- ALTER TABLE information
-- RENAME TO new_info;
-- ALTER TABLE new_info
-- RENAME COLUMN person to people;

-- ALTER TABLE new_info
-- ALTER COLUMN people DROP NOT NULL;

-- INSERT INTO new_info(title)
-- VALUES
-- ('some new title')

-- DROP
-- ALTER TABLE new_info
-- DROP COLUMN IF EXISTS people


-- CHECK constraint
-- CREATE TABLE employees(
-- 	emp_id SERIAL PRIMARY KEY,
-- 	first_name VARCHAR(50) NOT NULL,
-- 	last_name VARCHAR(50) NOT NULL,
-- 	birthdate DATE CHECK (birthdate > '01-01-1900'),
-- 	hire_date DATE CHECK (hire_date > birthdate)
-- )

-- ALTER TABLE employees
-- ADD COLUMN salary INTEGER CHECK (salary > 0);

-- INSERT INTO employees(
-- 	first_name,
-- 	last_name,
-- 	birthdate,
-- 	hire_date,
-- 	salary
-- )
-- VALUES
-- (
-- 	'Jimmy',
-- 	'Khan',
-- 	'11-11-1995',
-- 	'06-12-2018',
-- 	56000
-- )

-- INSERT INTO employees(
--  	first_name,
--  	last_name,
--  	birthdate,
--  	hire_date,
--  	salary
--  )
--  VALUES
--  (
--  	'Rimmy',
--  	'Khan',
--  	'21-11-1998',
--  	'06-12-2020',
--  	76000
-- );

-- SELECT * FROM employees;